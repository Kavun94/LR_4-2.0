1 git push.
2 git pull.
3 git merge.
4 go to submodule ,  git merge , go back , git merge.
5 .
6 Хороша розподілена модель, оскільки кожен розробник отримує локальне сховище з повною історією комітів,  що робить git швидким порівняно з іншими VC. Можливості розгалуження та злиття прості (оскільки дешеві), хороша цілісність даних. Вони безкоштовні та з відкритим кодом, ми можемо легко завантажити вихідний код і внести до нього зміни. Вони можуть ефективно виконувати великі проекти. Операції push/pull швидше за прості. Вони економлять час, а розробники можуть отримувати та створювати запити на витяг без перемикання.. Надлишковість даних і реплікації. Додатки можуть бути написані багатьма мовами.
7 Головним недоліком протоколу Git є відсутність авторизації .GIT вимагає технічної досконалості, а на Windows він працює повільніше. Вони мають виснажливі командні рядки для введення і не відстежують перейменування. Вони мають поганий графічний інтерфейс та зручність використання. Крім того, вони забирають багато ресурсів, що уповільнює продуктивність. GIT не підтримує перевірку піддерев. Для кожного проекту центральну службу потрібно налаштувати для кількох сховищ пакетів.Немає  підтримки вікон і не відстежує порожні папки. Немає вбудованого контролю доступу та не підтримує  двійкові файли.Вони не передбачають механізмів контролю доступу в разі безпеки.
8 Це місце де зберігаються та підтримуються дані.
9 Це місце, де зберігаються й підтримуються які-небудь дані.
10 Git відстежує зміни, які ви вносите у файли, тож у вас є запис про те, що було зроблено,
 і ви можете повернутися до певних версій, якщо вам знадобиться. Git також спрощує співпрацю, 
дозволяючи всі зміни, внесені кількома людьми, об’єднувати в одне джерело.
11 Оновлення вашої робочої копії шляхом внесення змін, зроблених іншими користувачами.
12 Покращення старих або додаваня нових властивостей до проекта.
13 Використання гілок допоможе вам організувати робочий процес більш ефективно і досить легко.
14 Злиття гілок в одну.
15 Подія, яка має місце, коли Git не може автоматично усунути розбіжності в коді між двома комітами.
1Я Якщо модифікації були лише в одній галузі.
17 Ні.
	